<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
		 http://www.springframework.org/schema/websocket
		 http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/petcommunity/**" location="C:/workspace/petcommunity/" />
	<resources mapping="/free/**" location="C:/workspace/free/" />
	<resources mapping="/images/**" location="C:/tip/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 최상위 패키지 명 -->
	<context:component-scan base-package="com.pet.web" />
	
	<!-- 웹 소켓 핸들러 -->
    <websocket:handlers>
        <websocket:mapping path="/chating" handler="socketHandler"/>
		 <websocket:handshake-interceptors>
        	<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
        </websocket:handshake-interceptors>
        <websocket:sockjs></websocket:sockjs> 
    </websocket:handlers>
 
    <beans:bean id="socketHandler" class="com.pet.web.socket.SocketHandler"/>
	
	<!-- 로그인 인터셉터 정의 -->
	<beans:bean id="loginInterceptor" class="com.pet.web.util.LoginInterceptor"></beans:bean>
	
	<!-- 다중 파일 처리 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="100000000"></beans:property>
	</beans:bean>
	
	<!-- 로그인 인터셉터를 경유해서 처리할 경로들 지정 -->
	<!-- 현 XML파일 상단의 beans 태그 내에 xmlns:mvc="http://www.springframework.org/schema/mvc" 추가하고 사용 -->
	<interceptors>
		<interceptor>
			<!-- 특정 네임스페이스 하위의 모든 경로에 대하여 다음과 같이 와일드카드 지정 가능 -->
			<!-- <mapping path="/board/boardList" />
			<mapping path="/board/readBoard" />
			<mapping path="/board/writeBoard" /> -->
			<!-- * : 1개의 경로만 막기 | ** : 여러개의 경로도 모두 막기 -->
			<mapping path="/freeBoard/freeBoardWrite" />
			<mapping path="/tradeBoard/tradeBoardWrite" />
			<mapping path="/photoBoard/photoBoardWrite"/>
			<!-- 위의 경로들은 다음의 인터셉터를 경유한다. -->
			<beans:ref bean="loginInterceptor" />
		</interceptor>
	</interceptors>
	
</beans:beans>
